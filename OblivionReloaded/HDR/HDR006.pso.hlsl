//
//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/HDR006.pso /Fcshaderdump19/HDR006.pso.dis
//
//
// Parameters:
//
float4 TimingData : register(c0);
float4 HDRParam : register(c1);
float4 TESR_GameTime : register(c2);
float4 TESR_ToneMapping : register(c19);

sampler2D ScreenSpace : register(s0);
sampler2D AvgLum : register(s1);
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   TimingData   const_0       1
//   HDRParam     const_1       1
//   ScreenSpace         texture_0       1
//   AvgLum       texture_1       1
//

#include "Includes/Color.hlsl"
#include "Includes/Common.hlsl"

// Structures:

struct VS_OUTPUT {
    float2 ScreenOffset : TEXCOORD0;
};

struct PS_OUTPUT {
    float4 color_0 : COLOR0;
};

/**
 *Credits/Sources:
 *
 *noonemusteverknow: https://www.nexusmods.com/oblivion/mods/50563
 *luluco250: https://github.com/luluco250
**/
PS_OUTPUT main(VS_OUTPUT IN) {
    PS_OUTPUT OUT;

    float3 color, avlum;

    color = tex2D(ScreenSpace, IN.ScreenOffset.xy).rgb;
    avlum = tex2D(AvgLum     , IN.ScreenOffset.xy).rgb;
	
	color = max(color, 0.0);
	avlum = max(0.1, avlum);
	color = GAMMA2LINEAR(color);
    avlum = GAMMA2LINEAR(avlum);
    color = pow(abs(color), TESR_ToneMapping.w);
	color = lerp(avlum, color, pow(abs(TESR_ToneMapping.z), TimingData.z));
    color = pow(abs(color), 1.0 / TESR_ToneMapping.w);
	color = LINEAR2GAMMA(color);

    OUT.color_0.a = 1;
    OUT.color_0.rgb = color;

    return OUT;
};

// approximately 19 instruction slots used (2 texture, 17 arithmetic)
